{"version":3,"sources":["constants/Constants.js","components/bottom_section/buttons/AllClearButton.js","components/bottom_section/buttons/CommaButton.js","components/bottom_section/buttons/DivisionButton.js","components/bottom_section/buttons/EqualsButton.js","components/bottom_section/buttons/MinusButton.js","components/bottom_section/buttons/MultiplyButton.js","components/bottom_section/buttons/PercentageButton.js","components/bottom_section/buttons/PlusButton.js","components/bottom_section/buttons/SignButton.js","components/bottom_section/Buttons.js","components/middle_section/Display.js","components/upper_section/Logo.js","components/upper_section/SolarBattery.js","components/Calculator.js","App.js","index.js"],"names":["BLANK","AllClearButton","setDisplayValue","setCurrentValue","setOperation","className","onClick","CommaButton","displayValueAsString","indexOf","DivisionButton","setWaitingValue","displayValue","currentValue","operation","waitingValue","displayResult","EqualsButton","MinusButton","MultiplyButton","PercentageButton","checkResultLength","PlusButton","displayValueAsNumber","currentValueAsNumber","SignButton","Buttons","Number","String","handleButtonClick","value","target","getButtonValue","length","result","resultAsString","slice","MAX_CHARACTERS","type","Display","Logo","SolarBattery","Calculator","useState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1545626c.chunk.js","sourcesContent":["const PLUS = '+';\r\nconst MINUS = '-';\r\nconst DIVISION = '/';\r\nconst MULTIPLY = '*';\r\nconst PERCENTAGE = '%';\r\nconst BLANK = '';\r\nconst DOT = '.';\r\nconst MAX_CHARACTERS = 13;\r\n\r\nexport {\r\n  PLUS,\r\n  MINUS,\r\n  DIVISION,\r\n  MULTIPLY,\r\n  PERCENTAGE,\r\n  BLANK,\r\n  DOT,\r\n  MAX_CHARACTERS,\r\n};\r\n","import React from 'react';\r\n\r\nimport { BLANK } from '../../../constants/Constants';\r\n\r\nconst AllClearButton = ({ setDisplayValue, setCurrentValue, setOperation }) => {\r\n  const clearAll = () => {\r\n    setDisplayValue(0);\r\n    setCurrentValue(0);\r\n    setOperation(BLANK);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={clearAll}>\r\n      AC\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AllClearButton;\r\n","import React from 'react';\r\n\r\nimport { BLANK, DOT } from '../../../constants/Constants';\r\n\r\nconst CommaButton = ({ setDisplayValue, displayValueAsString }) => {\r\n  const addPrecision = () => {\r\n    if (displayValueAsString .indexOf(DOT) === -1) {\r\n      setDisplayValue(displayValueAsString + BLANK + DOT);\r\n    }\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={addPrecision}>\r\n      ,\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CommaButton;\r\n","import React from 'react';\r\n\r\nimport { BLANK, DIVISION } from '../../../constants/Constants';\r\n\r\nconst DivisionButton = ({\r\n  setCurrentValue,\r\n  setWaitingValue,\r\n  displayValue,\r\n  currentValue,\r\n  operation,\r\n  waitingValue,\r\n  displayResult,\r\n  setOperation\r\n}) => {\r\n  const divide = () => {\r\n    if (!waitingValue) {\r\n      if (operation !== BLANK) {\r\n        displayResult();\r\n        if (operation === DIVISION) {\r\n          setCurrentValue(currentValue / displayValue);\r\n        }\r\n        setWaitingValue(true);\r\n      } else setCurrentValue(displayValue);\r\n      setWaitingValue(true);\r\n    }\r\n    setOperation(DIVISION);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={divide}>\r\n      <i className=\"fas fa-divide\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DivisionButton;\r\n","import React from 'react';\r\n\r\nconst EqualsButton = ({ displayResult }) => {\r\n  return (\r\n    <button className=\"button operation\" onClick={displayResult}>\r\n      <i className=\"fas fa-equals\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default EqualsButton;\r\n","import React from 'react';\r\n\r\nimport { BLANK, MINUS } from '../../../constants/Constants';\r\n\r\nconst MinusButton = ({\r\n  setCurrentValue,\r\n  setWaitingValue,\r\n  displayValue,\r\n  currentValue,\r\n  operation,\r\n  displayResult,\r\n  waitingValue,\r\n  setOperation\r\n}) => {\r\n  const subtract = () => {\r\n    if (!waitingValue) {\r\n      if (operation !== BLANK) {\r\n        displayResult();\r\n        if (operation === MINUS) {\r\n          setCurrentValue(currentValue - displayValue);\r\n        }\r\n        setWaitingValue(true);\r\n      } else setCurrentValue(displayValue);\r\n      setWaitingValue(true);\r\n    }\r\n    setOperation(MINUS);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={subtract}>\r\n      <i className=\"fas fa-minus\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MinusButton;\r\n","import React from 'react';\r\n\r\nimport { BLANK, MULTIPLY } from '../../../constants/Constants';\r\n\r\nconst MultiplyButton = ({\r\n  setCurrentValue,\r\n  displayValue,\r\n  setWaitingValue,\r\n  currentValue,\r\n  operation,\r\n  waitingValue,\r\n  displayResult,\r\n  setOperation\r\n}) => {\r\n  const multiply = () => {\r\n    if (!waitingValue) {\r\n      if (operation !== BLANK) {\r\n        displayResult();\r\n        if (operation === MULTIPLY) {\r\n          setCurrentValue(currentValue * displayValue);\r\n        }\r\n        setWaitingValue(true);\r\n      } else setCurrentValue(displayValue);\r\n      setWaitingValue(true);\r\n    }\r\n    setOperation(MULTIPLY);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={multiply}>\r\n      <i className=\"fas fa-times\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MultiplyButton;\r\n","import React from 'react';\r\n\r\nconst PercentageButton = ({\r\n  displayValue,\r\n  setWaitingValue,\r\n  setDisplayValue,\r\n  currentValue,\r\n  checkResultLength,\r\n}) => {\r\n  const percentage = () => {\r\n    if (currentValue === 0) {\r\n      setDisplayValue(checkResultLength(displayValue / 100));\r\n    } else\r\n      setDisplayValue(checkResultLength((displayValue * currentValue) / 100));\r\n    setWaitingValue(true);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={percentage}>\r\n      <i className=\"fas fa-percentage\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PercentageButton;\r\n","import React from 'react';\r\n\r\nimport { BLANK, PLUS } from '../../../constants/Constants';\r\n\r\nconst PlusButton = ({\r\n  displayValue,\r\n  setWaitingValue,\r\n  setCurrentValue,\r\n  waitingValue,\r\n  operation,\r\n  displayResult,\r\n  setOperation,\r\n  displayValueAsNumber,\r\n  currentValueAsNumber\r\n}) => {\r\n\r\n  const add = () => {\r\n    if (!waitingValue) {\r\n      if (operation !== BLANK) {\r\n        displayResult();\r\n        if (operation === PLUS) {\r\n          setCurrentValue(currentValueAsNumber + displayValueAsNumber);\r\n        }\r\n        setWaitingValue(true);\r\n      } else setCurrentValue(displayValue);\r\n      setWaitingValue(true);\r\n    }\r\n    setOperation(PLUS);\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={add}>\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PlusButton;\r\n","import React from 'react';\r\n\r\nconst SignButton = ({ displayValue, setDisplayValue, checkResultLength }) => {\r\n  const toggleSign = () => {\r\n   setDisplayValue(checkResultLength(displayValue * -1));\r\n  };\r\n  return (\r\n    <button className=\"button operation\" onClick={toggleSign}>\r\n      ±\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SignButton;\r\n","import React from 'react';\r\n\r\nimport {\r\n  BLANK,\r\n  DIVISION,\r\n  MAX_CHARACTERS,\r\n  MINUS,\r\n  MULTIPLY,\r\n  PERCENTAGE,\r\n  PLUS,\r\n} from '../../constants/Constants';\r\nimport {\r\n  AllClearButton,\r\n  CommaButton,\r\n  DivisionButton,\r\n  EqualsButton,\r\n  MinusButton,\r\n  MultiplyButton,\r\n  PercentageButton,\r\n  PlusButton,\r\n  SignButton,\r\n} from './buttons/index';\r\n\r\nconst Buttons = ({\r\n  setDisplayValue,\r\n  displayValue,\r\n  waitingValue,\r\n  setWaitingValue,\r\n  setCurrentValue,\r\n  currentValue,\r\n  operation,\r\n  setOperation,\r\n}) => {\r\n  const currentValueAsNumber = Number(currentValue);\r\n  const displayValueAsNumber = Number(displayValue);\r\n  const displayValueAsString = String(displayValue);\r\n\r\n  const handleButtonClick = ({ target: { value } }) => {\r\n    getButtonValue(value);\r\n  };\r\n\r\n  const getButtonValue = value => {\r\n    if (displayValue === 0 || waitingValue) {\r\n      setDisplayValue(value);\r\n      setWaitingValue(false);\r\n    } else if (displayValueAsString.length < MAX_CHARACTERS)\r\n      setDisplayValue(displayValueAsString + value);\r\n  };\r\n\r\n  const checkResultLength = result => {\r\n    const resultAsString = String(result);\r\n    if (resultAsString.length > MAX_CHARACTERS) {\r\n      return resultAsString.slice(0, MAX_CHARACTERS - 1) + 'e';\r\n    } else return result;\r\n  };\r\n\r\n  const displayResult = () => {\r\n    switch (operation) {\r\n      case PLUS:\r\n        setDisplayValue(\r\n          checkResultLength(displayValueAsNumber + currentValueAsNumber)\r\n        );\r\n        setCurrentValue(displayValueAsNumber + currentValueAsNumber);\r\n        setWaitingValue(true);\r\n        setOperation(BLANK);\r\n        break;\r\n      case MINUS:\r\n        setDisplayValue(checkResultLength(currentValue - displayValue));\r\n        setCurrentValue(currentValue - displayValue);\r\n        setWaitingValue(true);\r\n        setOperation(BLANK);\r\n        break;\r\n      case MULTIPLY:\r\n        setDisplayValue(checkResultLength(currentValue * displayValue));\r\n        setCurrentValue(currentValue * displayValue);\r\n        setWaitingValue(true);\r\n        setOperation(BLANK);\r\n        break;\r\n      case DIVISION:\r\n        setDisplayValue(checkResultLength(currentValue / displayValue));\r\n        setCurrentValue(currentValue / displayValue);\r\n        setWaitingValue(true);\r\n        setOperation(BLANK);\r\n        break;\r\n      case PERCENTAGE:\r\n        setDisplayValue(checkResultLength(currentValue * displayValue));\r\n        setWaitingValue(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <AllClearButton\r\n        setDisplayValue={setDisplayValue}\r\n        setCurrentValue={setCurrentValue}\r\n        setOperation={setOperation}\r\n      />\r\n      <SignButton\r\n        displayValue={displayValue}\r\n        setDisplayValue={setDisplayValue}\r\n        checkResultLength={checkResultLength}\r\n      />\r\n      <PercentageButton\r\n        displayValue={displayValue}\r\n        setWaitingValue={setWaitingValue}\r\n        currentValue={currentValue}\r\n        setDisplayValue={setDisplayValue}\r\n        checkResultLength={checkResultLength}\r\n      />\r\n      <DivisionButton\r\n        displayValue={displayValue}\r\n        setWaitingValue={setWaitingValue}\r\n        setCurrentValue={setCurrentValue}\r\n        currentValue={currentValue}\r\n        operation={operation}\r\n        waitingValue={waitingValue}\r\n        displayResult={displayResult}\r\n        setOperation={setOperation}\r\n      />\r\n\r\n      <input type=\"button\" value={7} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={8} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={9} onClick={handleButtonClick} />\r\n\r\n      <MultiplyButton\r\n        displayValue={displayValue}\r\n        setWaitingValue={setWaitingValue}\r\n        setCurrentValue={setCurrentValue}\r\n        currentValue={currentValue}\r\n        operation={operation}\r\n        waitingValue={waitingValue}\r\n        displayResult={displayResult}\r\n        setOperation={setOperation}\r\n      />\r\n\r\n      <input type=\"button\" value={4} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={5} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={6} onClick={handleButtonClick} />\r\n\r\n      <MinusButton\r\n        displayValue={displayValue}\r\n        setWaitingValue={setWaitingValue}\r\n        setCurrentValue={setCurrentValue}\r\n        currentValue={currentValue}\r\n        operation={operation}\r\n        waitingValue={waitingValue}\r\n        displayResult={displayResult}\r\n        setOperation={setOperation}\r\n      />\r\n\r\n      <input type=\"button\" value={1} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={2} onClick={handleButtonClick} />\r\n      <input type=\"button\" value={3} onClick={handleButtonClick} />\r\n\r\n      <PlusButton\r\n        displayValue={displayValue}\r\n        setWaitingValue={setWaitingValue}\r\n        setCurrentValue={setCurrentValue}\r\n        operation={operation}\r\n        waitingValue={waitingValue}\r\n        displayResult={displayResult}\r\n        setOperation={setOperation}\r\n        currentValueAsNumber={currentValueAsNumber}\r\n        displayValueAsNumber={displayValueAsNumber}\r\n      />\r\n\r\n      <input type=\"button\" value={0} onClick={handleButtonClick} />\r\n\r\n      <CommaButton\r\n        setDisplayValue={setDisplayValue}\r\n        displayValueAsString={displayValueAsString}\r\n      />\r\n\r\n      <EqualsButton displayResult={displayResult} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\n\r\nconst Display = ({ displayValue }) => {\r\n  return <div className=\"display\">{displayValue}</div>;\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\n\r\nconst Logo = () => {\r\n  return <div className=\"logo\">JCalculator</div>;\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst SolarBattery = () => {\r\n  return (\r\n    <div className=\"solar-battery\">\r\n      <span className=\"solar-cell\"></span>\r\n      <span className=\"solar-cell\"></span>\r\n      <span className=\"solar-cell\"></span>\r\n      <span className=\"solar-cell\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolarBattery;\r\n","import React, { useState } from 'react';\r\n\r\nimport { BLANK } from '../constants/Constants';\r\nimport Buttons from './bottom_section/Buttons';\r\nimport Display from './middle_section/Display';\r\nimport { Logo, SolarBattery } from './upper_section';\r\n\r\nconst Calculator = () => {\r\n  const [displayValue, setDisplayValue] = useState(0);\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const [waitingValue, setWaitingValue] = useState(false);\r\n  const [operation, setOperation] = useState(BLANK);\r\n  return (\r\n    <div className=\"main-view\">\r\n      <div className=\"calculator-body\">\r\n        <div className=\"upper-section\">\r\n          <SolarBattery />\r\n          <Logo />\r\n        </div>\r\n          <div className=\"middle-section\">\r\n            <Display\r\n              displayValue={displayValue}\r\n            />\r\n          </div>\r\n          <div className=\"bottom-section\">\r\n            <Buttons\r\n              setDisplayValue={setDisplayValue}\r\n              displayValue={displayValue}\r\n              waitingValue={waitingValue}\r\n              setWaitingValue={setWaitingValue}\r\n              setCurrentValue={setCurrentValue}\r\n              currentValue={currentValue}\r\n              operation={operation}\r\n              setOperation={setOperation}\r\n            />\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\nimport React from 'react';\n\nimport Calcualtor from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calcualtor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}